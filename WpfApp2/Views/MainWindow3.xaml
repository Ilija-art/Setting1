<Window x:Class="WpfApp2.Views.MainWindow3"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp2.Views"
        xmlns:quan3="clr-namespace:WpfApp2.ViewModels"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="MainWindow3" Height="450" Width="800">
    <Window.Resources>
        <quan3:ImageInfoViewModel x:Key="InfoVM"/>
        <quan3:OCRViewModel x:Key="OCRVM"/>
        <quan3:MouseViewModel x:Key="MouseVM"/>
        <quan3:MouseBehaviour x:Key="MouseBehaviour"/>
    </Window.Resources>


    <DockPanel DataContext="{Binding Source={StaticResource OCRVM}}">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open" Command="{Binding OpenImageCommand}"/>
                <MenuItem Header="_Save" Command="{Binding Save2JsonCommand}"/>
                <Separator/>
                <MenuItem Header="_Exit" Command="{Binding CloseWindowCommand}"/>
            </MenuItem>

            <MenuItem Header="_Process">
                <MenuItem Header="_To Gray">
                    <MenuItem Header="RGB2Gray"
                              Command="{Binding RunToGray1Command}"/>
                    <MenuItem Header="BMP8Gray"
                              Command="{Binding RunToGray2Command}"/>
                </MenuItem>
                <MenuItem Header="_Deskew"
                          Command="{Binding DeskewCommand}"/>
                <MenuItem Header="_Language">
                    <MenuItem Header="English" IsCheckable="True" IsChecked="{Binding SelectedLang.English}"
                              Command="{Binding ChangeLanguageCommand}" CommandParameter="eng"/>
                    <MenuItem Header="Korean" IsCheckable="True" IsChecked="{Binding SelectedLang.Korean}"
                              Command="{Binding ChangeLanguageCommand}" CommandParameter="kor"/>
                    <MenuItem Header="Japanese" IsCheckable="True" IsChecked="{Binding SelectedLang.Japanese}" 
                              Command="{Binding ChangeLanguageCommand}" CommandParameter="jpn"/>
                    <Separator/>
                    <MenuItem Header="Auto" IsCheckable="True" IsChecked="{Binding SelectedLang.Auto}"
                              Command="{Binding ChangeLanguageCommand}" CommandParameter="auto"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Run" Command="{Binding StartOCRCommand}">
                    <MenuItem.Icon>
                        <Image Source="runOCR.png"/>
                    </MenuItem.Icon>
                </MenuItem>

                <MenuItem Header="_Run All" Command="{Binding StartAllOCRCommand}">
                    <MenuItem.Icon>
                        <Image Source="runAllOCR.PNG"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Image info" Command="{Binding OpenImgInfoCommand}"/>
                <MenuItem Header="Vision">
                    <MenuItem Header="Character Block" IsCheckable="True" IsChecked="{Binding CharChecked}"/>
                    <MenuItem Header="Word Block" IsCheckable="True" IsChecked="{Binding WordChecked}"/>
                    <MenuItem Header="Line Block" IsCheckable="True" IsChecked="{Binding LineChecked}"/>
                    <MenuItem Header="Paragraph Block" IsCheckable="True" IsChecked="{Binding ParaChecked}"/>
                </MenuItem>
                
            </MenuItem>

            <MenuItem Header="_Setting" Command="{Binding OpenCropSettingsCommand}"></MenuItem>

            <MenuItem Header="Help">
                <MenuItem Header="_About" Click="About"/>
            </MenuItem>
        </Menu>

        <Grid x:Name="quanGrid" Background="AliceBlue">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <Image VerticalAlignment="Top" HorizontalAlignment="Left" Grid.RowSpan="2"
                   Source="{Binding CurrentImage.Image}" Margin="10"
                   Height="{Binding CurrentImage.Image.PixelHeight}"
                   Width="{Binding CurrentImage.Image.PixelWidth}"
                   Stretch="Uniform" 
                   quan3:MouseBehaviour.MouseLeftButtonDownCommand="{Binding MouseLeftButtonDownCommand}"
                   quan3:MouseBehaviour.MouseLeftButtonUpCommand="{Binding MouseLeftButtonUpCommand}"
                   quan3:MouseBehaviour.MouseMoveCommand="{Binding MouseMoveCommand}">

            </Image>

            <TextBox x:Name="textEditor" Grid.Column="1" Margin="10,10,10,0" 
                     TextWrapping="Wrap" Text="{Binding OutPutText, Mode=TwoWay}"
                     AcceptsReturn="True">
            </TextBox>

            <TextBox x:Name="textEditorTime" TextWrapping="Wrap"  Margin="10,10,10,10" 
                     Height="30" Grid.Column="1" Grid.Row="1" 
                     VerticalAlignment="Bottom" VerticalContentAlignment="Center"
                     Text="{Binding OutTime}">
            </TextBox>
            
            <!--This is for Segmented region-->

            <ItemsControl x:Name="itemControl" ItemsSource="{Binding RectItems}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas x:Name="front_canvas" HorizontalAlignment="Left" 
                                VerticalAlignment="Top" Grid.Row="0" Grid.Column="0" Margin="10"/>

                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.Left" Value="{Binding Rect.X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Rect.Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle Stroke="{Binding  Colr}" StrokeThickness="2"
                                   Width="{Binding Rect.Width}" Height="{Binding Rect.Height}" Visibility="{Binding Visible}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!--This is for manual croped region-->

            <ItemsControl x:Name="itemControl2" ItemsSource="{Binding CropRect}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas x:Name="front_canvas" HorizontalAlignment="Left" 
                                VerticalAlignment="Top" Grid.Row="0" Grid.Column="0" Margin="10"/>

                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.Left" Value="{Binding Rect.X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Rect.Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle Stroke="{Binding  Colr}" StrokeThickness="2"  StrokeDashArray="3"
                                   Width="{Binding Rect.Width}" Height="{Binding Rect.Height}" Visibility="{Binding Visible}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!--This is for crop setting region-->

            <ItemsControl x:Name="itemControl3" ItemsSource="{Binding CropRectSettings}" >
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas x:Name="front_canvas" HorizontalAlignment="Left" 
                                VerticalAlignment="Top" Grid.Row="0" Grid.Column="0" Margin="10"/>

                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Canvas.Left" Value="{Binding Rect.X}"/>
                        <Setter Property="Canvas.Top" Value="{Binding Rect.Y}"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Rectangle Stroke="{Binding  Colr}" StrokeThickness="4"
                                   Width="{Binding Rect.Width}" Height="{Binding Rect.Height}" Visibility="{Binding Visible}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>


            <!--Use for crop part-->
            <!--<i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseLeftButtonDown">
                    <i:InvokeCommandAction/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding MouseLeftButtonUpCommand}"/>
                </i:EventTrigger>

                <i:EventTrigger EventName="MouseMove">
                    <i:InvokeCommandAction Command="{Binding MouseMoveCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>-->
            

            <!--<Grid.LayoutTransform>
                <ScaleTransform ScaleX="{Binding ElementName=slider1, Path=Value}" ScaleY="{Binding ElementName=slider1, Path=Value}"/>
            </Grid.LayoutTransform>-->
           

        </Grid>
    </DockPanel>
   
</Window>
